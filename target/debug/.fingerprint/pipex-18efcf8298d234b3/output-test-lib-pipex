{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3877,"byte_end":3886,"line_start":114,"line_end":114,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"                        Ok(value) => {","highlight_start":25,"highlight_end":34}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10411,"byte_end":10524,"line_start":291,"line_end":294,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":3844,"byte_end":3850,"line_start":113,"line_end":113,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10411,"byte_end":10524,"line_start":291,"line_end":294,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":3850,"byte_end":3850,"line_start":113,"line_end":113,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10411,"byte_end":10524,"line_start":291,"line_end":294,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:114:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Ok(value) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4, 5]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m293\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [ignore, retry = 3] |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m294\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":4034,"byte_end":4040,"line_start":118,"line_end":118,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"                        Err(e) => {","highlight_start":25,"highlight_end":31}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10411,"byte_end":10524,"line_start":291,"line_end":294,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":3844,"byte_end":3850,"line_start":113,"line_end":113,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10411,"byte_end":10524,"line_start":291,"line_end":294,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":3850,"byte_end":3850,"line_start":113,"line_end":113,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10411,"byte_end":10524,"line_start":291,"line_end":294,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:118:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Err(e) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4, 5]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m293\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [ignore, retry = 3] |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m294\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":5324,"byte_end":5333,"line_start":149,"line_end":149,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"                        Ok(value) => {","highlight_start":25,"highlight_end":34}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10726,"byte_end":10837,"line_start":302,"line_end":305,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [collect, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":65},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":5291,"byte_end":5297,"line_start":148,"line_end":148,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10726,"byte_end":10837,"line_start":302,"line_end":305,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [collect, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":65},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5297,"byte_end":5297,"line_start":148,"line_end":148,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10726,"byte_end":10837,"line_start":302,"line_end":305,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [collect, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":65},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:149:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Ok(value) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m303\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m304\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [collect, retry = 2] |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m305\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":5481,"byte_end":5487,"line_start":153,"line_end":153,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"                        Err(e) => {","highlight_start":25,"highlight_end":31}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10726,"byte_end":10837,"line_start":302,"line_end":305,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [collect, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":65},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":5291,"byte_end":5297,"line_start":148,"line_end":148,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10726,"byte_end":10837,"line_start":302,"line_end":305,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [collect, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":65},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5297,"byte_end":5297,"line_start":148,"line_end":148,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10726,"byte_end":10837,"line_start":302,"line_end":305,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [collect, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":65},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:153:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Err(e) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m303\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m304\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [collect, retry = 2] |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m305\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":6838,"byte_end":6847,"line_start":185,"line_end":185,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"                        Ok(value) => {","highlight_start":25,"highlight_end":34}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11148,"byte_end":11264,"line_start":316,"line_end":319,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [fail_fast, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":67},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":6805,"byte_end":6811,"line_start":184,"line_end":184,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11148,"byte_end":11264,"line_start":316,"line_end":319,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [fail_fast, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":67},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":6811,"byte_end":6811,"line_start":184,"line_end":184,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11148,"byte_end":11264,"line_start":316,"line_end":319,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [fail_fast, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":67},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:185:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Ok(value) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m317\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4, 5]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m318\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [fail_fast, retry = 3] |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m319\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":6987,"byte_end":6993,"line_start":189,"line_end":189,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"                        Err(e) => {","highlight_start":25,"highlight_end":31}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11148,"byte_end":11264,"line_start":316,"line_end":319,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [fail_fast, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":67},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":6805,"byte_end":6811,"line_start":184,"line_end":184,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11148,"byte_end":11264,"line_start":316,"line_end":319,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [fail_fast, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":67},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":6811,"byte_end":6811,"line_start":184,"line_end":184,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11148,"byte_end":11264,"line_start":316,"line_end":319,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [fail_fast, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":67},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:189:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Err(e) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m317\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4, 5]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m318\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [fail_fast, retry = 3] |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m319\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3877,"byte_end":3886,"line_start":114,"line_end":114,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"                        Ok(value) => {","highlight_start":25,"highlight_end":34}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11435,"byte_end":11549,"line_start":327,"line_end":330,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [ignore, retry = 4] |x| { sometimes_fail(x) }","highlight_start":1,"highlight_end":68},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":3844,"byte_end":3850,"line_start":113,"line_end":113,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11435,"byte_end":11549,"line_start":327,"line_end":330,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [ignore, retry = 4] |x| { sometimes_fail(x) }","highlight_start":1,"highlight_end":68},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":3850,"byte_end":3850,"line_start":113,"line_end":113,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11435,"byte_end":11549,"line_start":327,"line_end":330,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [ignore, retry = 4] |x| { sometimes_fail(x) }","highlight_start":1,"highlight_end":68},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:114:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Ok(value) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m327\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m328\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [ignore, retry = 4] |x| { sometimes_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m330\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":4034,"byte_end":4040,"line_start":118,"line_end":118,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"                        Err(e) => {","highlight_start":25,"highlight_end":31}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11435,"byte_end":11549,"line_start":327,"line_end":330,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [ignore, retry = 4] |x| { sometimes_fail(x) }","highlight_start":1,"highlight_end":68},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":3844,"byte_end":3850,"line_start":113,"line_end":113,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11435,"byte_end":11549,"line_start":327,"line_end":330,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [ignore, retry = 4] |x| { sometimes_fail(x) }","highlight_start":1,"highlight_end":68},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":3850,"byte_end":3850,"line_start":113,"line_end":113,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11435,"byte_end":11549,"line_start":327,"line_end":330,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [ignore, retry = 4] |x| { sometimes_fail(x) }","highlight_start":1,"highlight_end":68},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:118:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Err(e) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m327\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m328\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [ignore, retry = 4] |x| { sometimes_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m330\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":6838,"byte_end":6847,"line_start":185,"line_end":185,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"                        Ok(value) => {","highlight_start":25,"highlight_end":34}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3089,"byte_end":3145,"line_start":95,"line_end":95,"column_start":13,"column_end":69,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, fail_fast)","highlight_start":13,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11746,"byte_end":11847,"line_start":338,"line_end":341,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 4, 5]  // Skip 3","highlight_start":1,"highlight_end":40},{"text":"            => async? |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":6805,"byte_end":6811,"line_start":184,"line_end":184,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3089,"byte_end":3145,"line_start":95,"line_end":95,"column_start":13,"column_end":69,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, fail_fast)","highlight_start":13,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11746,"byte_end":11847,"line_start":338,"line_end":341,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 4, 5]  // Skip 3","highlight_start":1,"highlight_end":40},{"text":"            => async? |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":6811,"byte_end":6811,"line_start":184,"line_end":184,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":3089,"byte_end":3145,"line_start":95,"line_end":95,"column_start":13,"column_end":69,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, fail_fast)","highlight_start":13,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11746,"byte_end":11847,"line_start":338,"line_end":341,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 4, 5]  // Skip 3","highlight_start":1,"highlight_end":40},{"text":"            => async? |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:185:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Ok(value) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m338\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m339\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 4, 5]  // Skip 3\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m340\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":6987,"byte_end":6993,"line_start":189,"line_end":189,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"                        Err(e) => {","highlight_start":25,"highlight_end":31}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3089,"byte_end":3145,"line_start":95,"line_end":95,"column_start":13,"column_end":69,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, fail_fast)","highlight_start":13,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11746,"byte_end":11847,"line_start":338,"line_end":341,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 4, 5]  // Skip 3","highlight_start":1,"highlight_end":40},{"text":"            => async? |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":6805,"byte_end":6811,"line_start":184,"line_end":184,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3089,"byte_end":3145,"line_start":95,"line_end":95,"column_start":13,"column_end":69,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, fail_fast)","highlight_start":13,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11746,"byte_end":11847,"line_start":338,"line_end":341,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 4, 5]  // Skip 3","highlight_start":1,"highlight_end":40},{"text":"            => async? |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":6811,"byte_end":6811,"line_start":184,"line_end":184,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":3089,"byte_end":3145,"line_start":95,"line_end":95,"column_start":13,"column_end":69,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, fail_fast)","highlight_start":13,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11746,"byte_end":11847,"line_start":338,"line_end":341,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 4, 5]  // Skip 3","highlight_start":1,"highlight_end":40},{"text":"            => async? |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:189:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Err(e) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m338\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m339\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 4, 5]  // Skip 3\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m340\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3877,"byte_end":3886,"line_start":114,"line_end":114,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"                        Ok(value) => {","highlight_start":25,"highlight_end":34}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":12046,"byte_end":12184,"line_start":349,"line_end":353,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"            => |x| x + 1","highlight_start":1,"highlight_end":25},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":3844,"byte_end":3850,"line_start":113,"line_end":113,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":12046,"byte_end":12184,"line_start":349,"line_end":353,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"            => |x| x + 1","highlight_start":1,"highlight_end":25},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":3850,"byte_end":3850,"line_start":113,"line_end":113,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":12046,"byte_end":12184,"line_start":349,"line_end":353,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"            => |x| x + 1","highlight_start":1,"highlight_end":25},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:114:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Ok(value) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m350\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4, 5]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [ignore, retry = 2] |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => |x| x + 1\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":4034,"byte_end":4040,"line_start":118,"line_end":118,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"                        Err(e) => {","highlight_start":25,"highlight_end":31}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":12046,"byte_end":12184,"line_start":349,"line_end":353,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"            => |x| x + 1","highlight_start":1,"highlight_end":25},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":3844,"byte_end":3850,"line_start":113,"line_end":113,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":12046,"byte_end":12184,"line_start":349,"line_end":353,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"            => |x| x + 1","highlight_start":1,"highlight_end":25},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":3850,"byte_end":3850,"line_start":113,"line_end":113,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2736,"byte_end":2810,"line_start":86,"line_end":86,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1736,"byte_end":1776,"line_start":61,"line_end":61,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":12046,"byte_end":12184,"line_start":349,"line_end":353,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"            => |x| x + 1","highlight_start":1,"highlight_end":25},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1644,"byte_end":1662,"line_start":58,"line_end":58,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:118:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Err(e) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m350\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4, 5]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [ignore, retry = 2] |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => |x| x + 1\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the parameter type `T` may not live long enough","code":{"code":"E0309","explanation":"A parameter type is missing an explicit lifetime bound and may not live long\nenough.\n\nErroneous code example:\n\n```compile_fail,E0309\n// This won't compile because the applicable impl of\n// `SomeTrait` (below) requires that `T: 'a`, but the struct does\n// not have a matching where-clause.\nstruct Foo<'a, T> {\n    foo: <T as SomeTrait<'a>>::Output,\n}\n\ntrait SomeTrait<'a> {\n    type Output;\n}\n\nimpl<'a, T> SomeTrait<'a> for T\nwhere\n    T: 'a,\n{\n    type Output = u32;\n}\n```\n\nThe type definition contains some field whose type requires an outlives\nannotation. Outlives annotations (e.g., `T: 'a`) are used to guarantee that all\nthe data in `T` is valid for at least the lifetime `'a`. This scenario most\ncommonly arises when the type contains an associated type reference like\n`<T as SomeTrait<'a>>::Output`, as shown in the previous code.\n\nThere, the where clause `T: 'a` that appears on the impl is not known to be\nsatisfied on the struct. To make this example compile, you have to add a\nwhere-clause like `T: 'a` to the struct definition:\n\n```\nstruct Foo<'a, T>\nwhere\n    T: 'a,\n{\n    foo: <T as SomeTrait<'a>>::Output\n}\n\ntrait SomeTrait<'a> {\n    type Output;\n}\n\nimpl<'a, T> SomeTrait<'a> for T\nwhere\n    T: 'a,\n{\n    type Output = u32;\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":548,"byte_end":562,"line_start":21,"line_end":21,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":"the parameter type `T` must be valid for the lifetime `'async_trait` as defined here...","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":548,"byte_end":562,"line_start":21,"line_end":21,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[async_trait]","def_site_span":{"file_name":"/Users/dransy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","byte_start":7473,"byte_end":7545,"line_start":252,"line_end":252,"column_start":1,"column_end":73,"is_primary":false,"text":[{"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":724,"byte_end":792,"line_start":24,"line_end":26,"column_start":74,"column_end":6,"is_primary":true,"text":[{"text":"    async fn handle_results(&self, results: Vec<Result<T, E>>) -> Vec<T> {","highlight_start":74,"highlight_end":75},{"text":"        results.into_iter().filter_map(Result::ok).collect()","highlight_start":1,"highlight_end":61},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"...so that the type `T` will meet its required lifetime bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider adding an explicit lifetime bound","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":562,"byte_end":562,"line_start":21,"line_end":21,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"#[async_trait]","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":", T: 'async_trait","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":548,"byte_end":562,"line_start":21,"line_end":21,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[async_trait]","def_site_span":{"file_name":"/Users/dransy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","byte_start":7473,"byte_end":7545,"line_start":252,"line_end":252,"column_start":1,"column_end":73,"is_primary":false,"text":[{"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0309]\u001b[0m\u001b[0m\u001b[1m: the parameter type `T` may not live long enough\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:24:74\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m#[async_trait]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe parameter type `T` must be valid for the lifetime `'async_trait` as defined here...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    async fn handle_results(&self, results: Vec<Result<T, E>>) -> Vec<T> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m __________________________________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        results.into_iter().filter_map(Result::ok).collect()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m...so that the type `T` will meet its required lifetime bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider adding an explicit lifetime bound\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[async_trait]\u001b[0m\u001b[0m\u001b[38;5;10m, T: 'async_trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the parameter type `E` may not live long enough","code":{"code":"E0309","explanation":"A parameter type is missing an explicit lifetime bound and may not live long\nenough.\n\nErroneous code example:\n\n```compile_fail,E0309\n// This won't compile because the applicable impl of\n// `SomeTrait` (below) requires that `T: 'a`, but the struct does\n// not have a matching where-clause.\nstruct Foo<'a, T> {\n    foo: <T as SomeTrait<'a>>::Output,\n}\n\ntrait SomeTrait<'a> {\n    type Output;\n}\n\nimpl<'a, T> SomeTrait<'a> for T\nwhere\n    T: 'a,\n{\n    type Output = u32;\n}\n```\n\nThe type definition contains some field whose type requires an outlives\nannotation. Outlives annotations (e.g., `T: 'a`) are used to guarantee that all\nthe data in `T` is valid for at least the lifetime `'a`. This scenario most\ncommonly arises when the type contains an associated type reference like\n`<T as SomeTrait<'a>>::Output`, as shown in the previous code.\n\nThere, the where clause `T: 'a` that appears on the impl is not known to be\nsatisfied on the struct. To make this example compile, you have to add a\nwhere-clause like `T: 'a` to the struct definition:\n\n```\nstruct Foo<'a, T>\nwhere\n    T: 'a,\n{\n    foo: <T as SomeTrait<'a>>::Output\n}\n\ntrait SomeTrait<'a> {\n    type Output;\n}\n\nimpl<'a, T> SomeTrait<'a> for T\nwhere\n    T: 'a,\n{\n    type Output = u32;\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":548,"byte_end":562,"line_start":21,"line_end":21,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":"the parameter type `E` must be valid for the lifetime `'async_trait` as defined here...","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":548,"byte_end":562,"line_start":21,"line_end":21,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[async_trait]","def_site_span":{"file_name":"/Users/dransy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","byte_start":7473,"byte_end":7545,"line_start":252,"line_end":252,"column_start":1,"column_end":73,"is_primary":false,"text":[{"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":724,"byte_end":792,"line_start":24,"line_end":26,"column_start":74,"column_end":6,"is_primary":true,"text":[{"text":"    async fn handle_results(&self, results: Vec<Result<T, E>>) -> Vec<T> {","highlight_start":74,"highlight_end":75},{"text":"        results.into_iter().filter_map(Result::ok).collect()","highlight_start":1,"highlight_end":61},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"...so that the type `E` will meet its required lifetime bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider adding an explicit lifetime bound","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":562,"byte_end":562,"line_start":21,"line_end":21,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"#[async_trait]","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":", E: 'async_trait","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":548,"byte_end":562,"line_start":21,"line_end":21,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[async_trait]","def_site_span":{"file_name":"/Users/dransy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","byte_start":7473,"byte_end":7545,"line_start":252,"line_end":252,"column_start":1,"column_end":73,"is_primary":false,"text":[{"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0309]\u001b[0m\u001b[0m\u001b[1m: the parameter type `E` may not live long enough\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:24:74\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m#[async_trait]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe parameter type `E` must be valid for the lifetime `'async_trait` as defined here...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    async fn handle_results(&self, results: Vec<Result<T, E>>) -> Vec<T> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m __________________________________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        results.into_iter().filter_map(Result::ok).collect()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m...so that the type `E` will meet its required lifetime bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider adding an explicit lifetime bound\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[async_trait]\u001b[0m\u001b[0m\u001b[38;5;10m, E: 'async_trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the parameter type `T` may not live long enough","code":{"code":"E0309","explanation":"A parameter type is missing an explicit lifetime bound and may not live long\nenough.\n\nErroneous code example:\n\n```compile_fail,E0309\n// This won't compile because the applicable impl of\n// `SomeTrait` (below) requires that `T: 'a`, but the struct does\n// not have a matching where-clause.\nstruct Foo<'a, T> {\n    foo: <T as SomeTrait<'a>>::Output,\n}\n\ntrait SomeTrait<'a> {\n    type Output;\n}\n\nimpl<'a, T> SomeTrait<'a> for T\nwhere\n    T: 'a,\n{\n    type Output = u32;\n}\n```\n\nThe type definition contains some field whose type requires an outlives\nannotation. Outlives annotations (e.g., `T: 'a`) are used to guarantee that all\nthe data in `T` is valid for at least the lifetime `'a`. This scenario most\ncommonly arises when the type contains an associated type reference like\n`<T as SomeTrait<'a>>::Output`, as shown in the previous code.\n\nThere, the where clause `T: 'a` that appears on the impl is not known to be\nsatisfied on the struct. To make this example compile, you have to add a\nwhere-clause like `T: 'a` to the struct definition:\n\n```\nstruct Foo<'a, T>\nwhere\n    T: 'a,\n{\n    foo: <T as SomeTrait<'a>>::Output\n}\n\ntrait SomeTrait<'a> {\n    type Output;\n}\n\nimpl<'a, T> SomeTrait<'a> for T\nwhere\n    T: 'a,\n{\n    type Output = u32;\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":848,"byte_end":862,"line_start":31,"line_end":31,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":"the parameter type `T` must be valid for the lifetime `'async_trait` as defined here...","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":848,"byte_end":862,"line_start":31,"line_end":31,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[async_trait]","def_site_span":{"file_name":"/Users/dransy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","byte_start":7473,"byte_end":7545,"line_start":252,"line_end":252,"column_start":1,"column_end":73,"is_primary":false,"text":[{"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":1047,"byte_end":1070,"line_start":34,"line_end":36,"column_start":85,"column_end":6,"is_primary":true,"text":[{"text":"    async fn handle_results(&self, results: Vec<Result<T, E>>) -> Vec<Result<T, E>> {","highlight_start":85,"highlight_end":86},{"text":"        results","highlight_start":1,"highlight_end":16},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"...so that the type `T` will meet its required lifetime bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider adding an explicit lifetime bound","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":862,"byte_end":862,"line_start":31,"line_end":31,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"#[async_trait]","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":", T: 'async_trait","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":848,"byte_end":862,"line_start":31,"line_end":31,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[async_trait]","def_site_span":{"file_name":"/Users/dransy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","byte_start":7473,"byte_end":7545,"line_start":252,"line_end":252,"column_start":1,"column_end":73,"is_primary":false,"text":[{"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0309]\u001b[0m\u001b[0m\u001b[1m: the parameter type `T` may not live long enough\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:34:85\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m#[async_trait]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe parameter type `T` must be valid for the lifetime `'async_trait` as defined here...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    async fn handle_results(&self, results: Vec<Result<T, E>>) -> Vec<Result<T, E>> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _____________________________________________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        results\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m...so that the type `T` will meet its required lifetime bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider adding an explicit lifetime bound\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[async_trait]\u001b[0m\u001b[0m\u001b[38;5;10m, T: 'async_trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the parameter type `E` may not live long enough","code":{"code":"E0309","explanation":"A parameter type is missing an explicit lifetime bound and may not live long\nenough.\n\nErroneous code example:\n\n```compile_fail,E0309\n// This won't compile because the applicable impl of\n// `SomeTrait` (below) requires that `T: 'a`, but the struct does\n// not have a matching where-clause.\nstruct Foo<'a, T> {\n    foo: <T as SomeTrait<'a>>::Output,\n}\n\ntrait SomeTrait<'a> {\n    type Output;\n}\n\nimpl<'a, T> SomeTrait<'a> for T\nwhere\n    T: 'a,\n{\n    type Output = u32;\n}\n```\n\nThe type definition contains some field whose type requires an outlives\nannotation. Outlives annotations (e.g., `T: 'a`) are used to guarantee that all\nthe data in `T` is valid for at least the lifetime `'a`. This scenario most\ncommonly arises when the type contains an associated type reference like\n`<T as SomeTrait<'a>>::Output`, as shown in the previous code.\n\nThere, the where clause `T: 'a` that appears on the impl is not known to be\nsatisfied on the struct. To make this example compile, you have to add a\nwhere-clause like `T: 'a` to the struct definition:\n\n```\nstruct Foo<'a, T>\nwhere\n    T: 'a,\n{\n    foo: <T as SomeTrait<'a>>::Output\n}\n\ntrait SomeTrait<'a> {\n    type Output;\n}\n\nimpl<'a, T> SomeTrait<'a> for T\nwhere\n    T: 'a,\n{\n    type Output = u32;\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":848,"byte_end":862,"line_start":31,"line_end":31,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":"the parameter type `E` must be valid for the lifetime `'async_trait` as defined here...","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":848,"byte_end":862,"line_start":31,"line_end":31,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[async_trait]","def_site_span":{"file_name":"/Users/dransy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","byte_start":7473,"byte_end":7545,"line_start":252,"line_end":252,"column_start":1,"column_end":73,"is_primary":false,"text":[{"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":1047,"byte_end":1070,"line_start":34,"line_end":36,"column_start":85,"column_end":6,"is_primary":true,"text":[{"text":"    async fn handle_results(&self, results: Vec<Result<T, E>>) -> Vec<Result<T, E>> {","highlight_start":85,"highlight_end":86},{"text":"        results","highlight_start":1,"highlight_end":16},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"...so that the type `E` will meet its required lifetime bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider adding an explicit lifetime bound","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":862,"byte_end":862,"line_start":31,"line_end":31,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"#[async_trait]","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":", E: 'async_trait","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":848,"byte_end":862,"line_start":31,"line_end":31,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[async_trait]","def_site_span":{"file_name":"/Users/dransy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","byte_start":7473,"byte_end":7545,"line_start":252,"line_end":252,"column_start":1,"column_end":73,"is_primary":false,"text":[{"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0309]\u001b[0m\u001b[0m\u001b[1m: the parameter type `E` may not live long enough\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:34:85\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m#[async_trait]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe parameter type `E` must be valid for the lifetime `'async_trait` as defined here...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    async fn handle_results(&self, results: Vec<Result<T, E>>) -> Vec<Result<T, E>> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _____________________________________________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        results\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m...so that the type `E` will meet its required lifetime bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider adding an explicit lifetime bound\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[async_trait]\u001b[0m\u001b[0m\u001b[38;5;10m, E: 'async_trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the parameter type `T` may not live long enough","code":{"code":"E0309","explanation":"A parameter type is missing an explicit lifetime bound and may not live long\nenough.\n\nErroneous code example:\n\n```compile_fail,E0309\n// This won't compile because the applicable impl of\n// `SomeTrait` (below) requires that `T: 'a`, but the struct does\n// not have a matching where-clause.\nstruct Foo<'a, T> {\n    foo: <T as SomeTrait<'a>>::Output,\n}\n\ntrait SomeTrait<'a> {\n    type Output;\n}\n\nimpl<'a, T> SomeTrait<'a> for T\nwhere\n    T: 'a,\n{\n    type Output = u32;\n}\n```\n\nThe type definition contains some field whose type requires an outlives\nannotation. Outlives annotations (e.g., `T: 'a`) are used to guarantee that all\nthe data in `T` is valid for at least the lifetime `'a`. This scenario most\ncommonly arises when the type contains an associated type reference like\n`<T as SomeTrait<'a>>::Output`, as shown in the previous code.\n\nThere, the where clause `T: 'a` that appears on the impl is not known to be\nsatisfied on the struct. To make this example compile, you have to add a\nwhere-clause like `T: 'a` to the struct definition:\n\n```\nstruct Foo<'a, T>\nwhere\n    T: 'a,\n{\n    foo: <T as SomeTrait<'a>>::Output\n}\n\ntrait SomeTrait<'a> {\n    type Output;\n}\n\nimpl<'a, T> SomeTrait<'a> for T\nwhere\n    T: 'a,\n{\n    type Output = u32;\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1125,"byte_end":1139,"line_start":41,"line_end":41,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":"the parameter type `T` must be valid for the lifetime `'async_trait` as defined here...","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1125,"byte_end":1139,"line_start":41,"line_end":41,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[async_trait]","def_site_span":{"file_name":"/Users/dransy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","byte_start":7473,"byte_end":7545,"line_start":252,"line_end":252,"column_start":1,"column_end":73,"is_primary":false,"text":[{"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":1325,"byte_end":1570,"line_start":44,"line_end":53,"column_start":85,"column_end":6,"is_primary":true,"text":[{"text":"    async fn handle_results(&self, results: Vec<Result<T, E>>) -> Result<Vec<T>, E> {","highlight_start":85,"highlight_end":86},{"text":"        let mut successes = Vec::new();","highlight_start":1,"highlight_end":40},{"text":"        for result in results {","highlight_start":1,"highlight_end":32},{"text":"            match result {","highlight_start":1,"highlight_end":27},{"text":"                Ok(value) => successes.push(value),","highlight_start":1,"highlight_end":52},{"text":"                Err(e) => return Err(e),","highlight_start":1,"highlight_end":41},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        Ok(successes)","highlight_start":1,"highlight_end":22},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"...so that the type `T` will meet its required lifetime bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider adding an explicit lifetime bound","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":1139,"byte_end":1139,"line_start":41,"line_end":41,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"#[async_trait]","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":", T: 'async_trait","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":1125,"byte_end":1139,"line_start":41,"line_end":41,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[async_trait]","def_site_span":{"file_name":"/Users/dransy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","byte_start":7473,"byte_end":7545,"line_start":252,"line_end":252,"column_start":1,"column_end":73,"is_primary":false,"text":[{"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0309]\u001b[0m\u001b[0m\u001b[1m: the parameter type `T` may not live long enough\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:44:85\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m#[async_trait]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe parameter type `T` must be valid for the lifetime `'async_trait` as defined here...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    async fn handle_results(&self, results: Vec<Result<T, E>>) -> Result<Vec<T>, E> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _____________________________________________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut successes = Vec::new();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for result in results {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            match result {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Ok(successes)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m...so that the type `T` will meet its required lifetime bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider adding an explicit lifetime bound\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[async_trait]\u001b[0m\u001b[0m\u001b[38;5;10m, T: 'async_trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the parameter type `E` may not live long enough","code":{"code":"E0309","explanation":"A parameter type is missing an explicit lifetime bound and may not live long\nenough.\n\nErroneous code example:\n\n```compile_fail,E0309\n// This won't compile because the applicable impl of\n// `SomeTrait` (below) requires that `T: 'a`, but the struct does\n// not have a matching where-clause.\nstruct Foo<'a, T> {\n    foo: <T as SomeTrait<'a>>::Output,\n}\n\ntrait SomeTrait<'a> {\n    type Output;\n}\n\nimpl<'a, T> SomeTrait<'a> for T\nwhere\n    T: 'a,\n{\n    type Output = u32;\n}\n```\n\nThe type definition contains some field whose type requires an outlives\nannotation. Outlives annotations (e.g., `T: 'a`) are used to guarantee that all\nthe data in `T` is valid for at least the lifetime `'a`. This scenario most\ncommonly arises when the type contains an associated type reference like\n`<T as SomeTrait<'a>>::Output`, as shown in the previous code.\n\nThere, the where clause `T: 'a` that appears on the impl is not known to be\nsatisfied on the struct. To make this example compile, you have to add a\nwhere-clause like `T: 'a` to the struct definition:\n\n```\nstruct Foo<'a, T>\nwhere\n    T: 'a,\n{\n    foo: <T as SomeTrait<'a>>::Output\n}\n\ntrait SomeTrait<'a> {\n    type Output;\n}\n\nimpl<'a, T> SomeTrait<'a> for T\nwhere\n    T: 'a,\n{\n    type Output = u32;\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1125,"byte_end":1139,"line_start":41,"line_end":41,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":"the parameter type `E` must be valid for the lifetime `'async_trait` as defined here...","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1125,"byte_end":1139,"line_start":41,"line_end":41,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[async_trait]","def_site_span":{"file_name":"/Users/dransy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","byte_start":7473,"byte_end":7545,"line_start":252,"line_end":252,"column_start":1,"column_end":73,"is_primary":false,"text":[{"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":1325,"byte_end":1570,"line_start":44,"line_end":53,"column_start":85,"column_end":6,"is_primary":true,"text":[{"text":"    async fn handle_results(&self, results: Vec<Result<T, E>>) -> Result<Vec<T>, E> {","highlight_start":85,"highlight_end":86},{"text":"        let mut successes = Vec::new();","highlight_start":1,"highlight_end":40},{"text":"        for result in results {","highlight_start":1,"highlight_end":32},{"text":"            match result {","highlight_start":1,"highlight_end":27},{"text":"                Ok(value) => successes.push(value),","highlight_start":1,"highlight_end":52},{"text":"                Err(e) => return Err(e),","highlight_start":1,"highlight_end":41},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        Ok(successes)","highlight_start":1,"highlight_end":22},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"...so that the type `E` will meet its required lifetime bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider adding an explicit lifetime bound","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":1139,"byte_end":1139,"line_start":41,"line_end":41,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"#[async_trait]","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":", E: 'async_trait","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":1125,"byte_end":1139,"line_start":41,"line_end":41,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"#[async_trait]","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[async_trait]","def_site_span":{"file_name":"/Users/dransy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","byte_start":7473,"byte_end":7545,"line_start":252,"line_end":252,"column_start":1,"column_end":73,"is_primary":false,"text":[{"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0309]\u001b[0m\u001b[0m\u001b[1m: the parameter type `E` may not live long enough\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:44:85\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m#[async_trait]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe parameter type `E` must be valid for the lifetime `'async_trait` as defined here...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    async fn handle_results(&self, results: Vec<Result<T, E>>) -> Result<Vec<T>, E> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _____________________________________________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut successes = Vec::new();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for result in results {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            match result {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Ok(successes)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m...so that the type `E` will meet its required lifetime bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider adding an explicit lifetime bound\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[async_trait]\u001b[0m\u001b[0m\u001b[38;5;10m, E: 'async_trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 18 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 18 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0308, E0309.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0308, E0309.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}
