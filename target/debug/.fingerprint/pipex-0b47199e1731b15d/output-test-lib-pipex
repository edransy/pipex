{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3730,"byte_end":3739,"line_start":109,"line_end":109,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"                        Ok(value) => {","highlight_start":25,"highlight_end":34}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10239,"byte_end":10352,"line_start":285,"line_end":288,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":3697,"byte_end":3703,"line_start":108,"line_end":108,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10239,"byte_end":10352,"line_start":285,"line_end":288,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":3703,"byte_end":3703,"line_start":108,"line_end":108,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10239,"byte_end":10352,"line_start":285,"line_end":288,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:109:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Ok(value) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m285\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m286\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4, 5]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [ignore, retry = 3] |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3887,"byte_end":3893,"line_start":113,"line_end":113,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"                        Err(e) => {","highlight_start":25,"highlight_end":31}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10239,"byte_end":10352,"line_start":285,"line_end":288,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":3697,"byte_end":3703,"line_start":108,"line_end":108,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10239,"byte_end":10352,"line_start":285,"line_end":288,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":3703,"byte_end":3703,"line_start":108,"line_end":108,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10239,"byte_end":10352,"line_start":285,"line_end":288,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:113:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Err(e) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m285\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m286\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4, 5]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [ignore, retry = 3] |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":5185,"byte_end":5194,"line_start":144,"line_end":144,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"                        Ok(value) => {","highlight_start":25,"highlight_end":34}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10554,"byte_end":10665,"line_start":296,"line_end":299,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [collect, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":65},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":5152,"byte_end":5158,"line_start":143,"line_end":143,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10554,"byte_end":10665,"line_start":296,"line_end":299,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [collect, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":65},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5158,"byte_end":5158,"line_start":143,"line_end":143,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10554,"byte_end":10665,"line_start":296,"line_end":299,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [collect, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":65},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:144:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Ok(value) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [collect, retry = 2] |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m299\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":5342,"byte_end":5348,"line_start":148,"line_end":148,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"                        Err(e) => {","highlight_start":25,"highlight_end":31}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10554,"byte_end":10665,"line_start":296,"line_end":299,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [collect, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":65},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":5152,"byte_end":5158,"line_start":143,"line_end":143,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10554,"byte_end":10665,"line_start":296,"line_end":299,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [collect, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":65},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5158,"byte_end":5158,"line_start":143,"line_end":143,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10554,"byte_end":10665,"line_start":296,"line_end":299,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [collect, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":65},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:148:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Err(e) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [collect, retry = 2] |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m299\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":6711,"byte_end":6720,"line_start":180,"line_end":180,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"                        Ok(value) => {","highlight_start":25,"highlight_end":34}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10976,"byte_end":11092,"line_start":310,"line_end":313,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [fail_fast, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":67},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":6678,"byte_end":6684,"line_start":179,"line_end":179,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10976,"byte_end":11092,"line_start":310,"line_end":313,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [fail_fast, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":67},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":6684,"byte_end":6684,"line_start":179,"line_end":179,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10976,"byte_end":11092,"line_start":310,"line_end":313,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [fail_fast, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":67},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:180:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Ok(value) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4, 5]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m312\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [fail_fast, retry = 3] |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m313\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":6860,"byte_end":6866,"line_start":184,"line_end":184,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"                        Err(e) => {","highlight_start":25,"highlight_end":31}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10976,"byte_end":11092,"line_start":310,"line_end":313,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [fail_fast, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":67},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":6678,"byte_end":6684,"line_start":179,"line_end":179,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10976,"byte_end":11092,"line_start":310,"line_end":313,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [fail_fast, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":67},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":6684,"byte_end":6684,"line_start":179,"line_end":179,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10976,"byte_end":11092,"line_start":310,"line_end":313,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [fail_fast, retry = 3] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":67},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:184:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Err(e) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4, 5]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m312\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [fail_fast, retry = 3] |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m313\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3730,"byte_end":3739,"line_start":109,"line_end":109,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"                        Ok(value) => {","highlight_start":25,"highlight_end":34}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11263,"byte_end":11377,"line_start":321,"line_end":324,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [ignore, retry = 4] |x| { sometimes_fail(x) }","highlight_start":1,"highlight_end":68},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":3697,"byte_end":3703,"line_start":108,"line_end":108,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11263,"byte_end":11377,"line_start":321,"line_end":324,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [ignore, retry = 4] |x| { sometimes_fail(x) }","highlight_start":1,"highlight_end":68},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":3703,"byte_end":3703,"line_start":108,"line_end":108,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11263,"byte_end":11377,"line_start":321,"line_end":324,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [ignore, retry = 4] |x| { sometimes_fail(x) }","highlight_start":1,"highlight_end":68},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:109:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Ok(value) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m322\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m323\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [ignore, retry = 4] |x| { sometimes_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m324\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3887,"byte_end":3893,"line_start":113,"line_end":113,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"                        Err(e) => {","highlight_start":25,"highlight_end":31}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11263,"byte_end":11377,"line_start":321,"line_end":324,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [ignore, retry = 4] |x| { sometimes_fail(x) }","highlight_start":1,"highlight_end":68},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":3697,"byte_end":3703,"line_start":108,"line_end":108,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11263,"byte_end":11377,"line_start":321,"line_end":324,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [ignore, retry = 4] |x| { sometimes_fail(x) }","highlight_start":1,"highlight_end":68},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":3703,"byte_end":3703,"line_start":108,"line_end":108,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11263,"byte_end":11377,"line_start":321,"line_end":324,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4]","highlight_start":1,"highlight_end":29},{"text":"            => async? [ignore, retry = 4] |x| { sometimes_fail(x) }","highlight_start":1,"highlight_end":68},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:113:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Err(e) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m322\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m323\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [ignore, retry = 4] |x| { sometimes_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m324\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":6711,"byte_end":6720,"line_start":180,"line_end":180,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"                        Ok(value) => {","highlight_start":25,"highlight_end":34}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2924,"byte_end":2980,"line_start":90,"line_end":90,"column_start":13,"column_end":69,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, fail_fast)","highlight_start":13,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11574,"byte_end":11675,"line_start":332,"line_end":335,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 4, 5]  // Skip 3","highlight_start":1,"highlight_end":40},{"text":"            => async? |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":6678,"byte_end":6684,"line_start":179,"line_end":179,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2924,"byte_end":2980,"line_start":90,"line_end":90,"column_start":13,"column_end":69,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, fail_fast)","highlight_start":13,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11574,"byte_end":11675,"line_start":332,"line_end":335,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 4, 5]  // Skip 3","highlight_start":1,"highlight_end":40},{"text":"            => async? |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":6684,"byte_end":6684,"line_start":179,"line_end":179,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2924,"byte_end":2980,"line_start":90,"line_end":90,"column_start":13,"column_end":69,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, fail_fast)","highlight_start":13,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11574,"byte_end":11675,"line_start":332,"line_end":335,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 4, 5]  // Skip 3","highlight_start":1,"highlight_end":40},{"text":"            => async? |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:180:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Ok(value) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m332\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m333\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 4, 5]  // Skip 3\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m334\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m335\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":6860,"byte_end":6866,"line_start":184,"line_end":184,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"                        Err(e) => {","highlight_start":25,"highlight_end":31}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2924,"byte_end":2980,"line_start":90,"line_end":90,"column_start":13,"column_end":69,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, fail_fast)","highlight_start":13,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11574,"byte_end":11675,"line_start":332,"line_end":335,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 4, 5]  // Skip 3","highlight_start":1,"highlight_end":40},{"text":"            => async? |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":6678,"byte_end":6684,"line_start":179,"line_end":179,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2924,"byte_end":2980,"line_start":90,"line_end":90,"column_start":13,"column_end":69,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, fail_fast)","highlight_start":13,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11574,"byte_end":11675,"line_start":332,"line_end":335,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 4, 5]  // Skip 3","highlight_start":1,"highlight_end":40},{"text":"            => async? |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":6684,"byte_end":6684,"line_start":179,"line_end":179,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2924,"byte_end":2980,"line_start":90,"line_end":90,"column_start":13,"column_end":69,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, fail_fast)","highlight_start":13,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11574,"byte_end":11675,"line_start":332,"line_end":335,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 4, 5]  // Skip 3","highlight_start":1,"highlight_end":40},{"text":"            => async? |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:184:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Err(e) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m332\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m333\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 4, 5]  // Skip 3\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m334\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m335\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3730,"byte_end":3739,"line_start":109,"line_end":109,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"                        Ok(value) => {","highlight_start":25,"highlight_end":34}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11874,"byte_end":12012,"line_start":343,"line_end":347,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"            => |x| x + 1","highlight_start":1,"highlight_end":25},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":3697,"byte_end":3703,"line_start":108,"line_end":108,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11874,"byte_end":12012,"line_start":343,"line_end":347,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"            => |x| x + 1","highlight_start":1,"highlight_end":25},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":3703,"byte_end":3703,"line_start":108,"line_end":108,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11874,"byte_end":12012,"line_start":343,"line_end":347,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"            => |x| x + 1","highlight_start":1,"highlight_end":25},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:109:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Ok(value) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m343\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4, 5]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m345\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [ignore, retry = 2] |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => |x| x + 1\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m347\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3887,"byte_end":3893,"line_start":113,"line_end":113,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"                        Err(e) => {","highlight_start":25,"highlight_end":31}],"label":"expected future, found `Result<_, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11874,"byte_end":12012,"line_start":343,"line_end":347,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"            => |x| x + 1","highlight_start":1,"highlight_end":25},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":3697,"byte_end":3703,"line_start":108,"line_end":108,"column_start":27,"column_end":33,"is_primary":false,"text":[{"text":"                    match result {","highlight_start":27,"highlight_end":33}],"label":"this expression has type `impl futures::Future<Output = Result<i32, String>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11874,"byte_end":12012,"line_start":343,"line_end":347,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"            => |x| x + 1","highlight_start":1,"highlight_end":25},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected opaque type `impl futures::Future<Output = Result<i32, String>>`\n          found enum `Result<_, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider `await`ing on the `Future`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":3703,"byte_end":3703,"line_start":108,"line_end":108,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"                    match result {","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".await","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/lib.rs","byte_start":2571,"byte_end":2645,"line_start":81,"line_end":81,"column_start":13,"column_end":87,"is_primary":false,"text":[{"text":"            pipex!(@async_with_config input, $var, $body, $strategy $(, $($config)*)?)","highlight_start":13,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1611,"line_start":56,"line_end":56,"column_start":9,"column_end":49,"is_primary":false,"text":[{"text":"        pipex!(@process $input $(=> $($rest)+)?)","highlight_start":9,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11874,"byte_end":12012,"line_start":343,"line_end":347,"column_start":22,"column_end":10,"is_primary":false,"text":[{"text":"        let result = pipex!(","highlight_start":22,"highlight_end":29},{"text":"            vec![1, 2, 3, 4, 5]","highlight_start":1,"highlight_end":32},{"text":"            => async? [ignore, retry = 2] |x| { maybe_fail(x) }","highlight_start":1,"highlight_end":64},{"text":"            => |x| x + 1","highlight_start":1,"highlight_end":25},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"pipex!","def_site_span":{"file_name":"src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":53,"line_end":53,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! pipex {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:113:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `impl futures::Future<Output = Result<i32, String>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Err(e) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected future, found `Result<_, _>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m343\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let result = pipex!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m ______________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vec![1, 2, 3, 4, 5]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m345\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => async? [ignore, retry = 2] |x| { maybe_fail(x) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            => |x| x + 1\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m347\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl futures::Future<Output = Result<i32, String>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                      found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<_, _>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `pipex` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider `await`ing on the `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    match result\u001b[0m\u001b[0m\u001b[38;5;10m.await\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 12 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 12 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}
